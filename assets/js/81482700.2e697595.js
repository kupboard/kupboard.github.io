(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2350],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8523:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),o={},c={unversionedId:"scaling",id:"scaling",isDocsHomePage:!1,title:"Monitoring & Scaling",description:"Monitoring resources is critical to maintain a stable system, and humans need to be aware of specific system status. In addition to monitoring, services on cloud native should be resilient and scalable. Clusters of kupboard are very flexible and its size can be changed manually or automatically.",source:"@site/docs/scaling.md",sourceDirName:".",slug:"/scaling",permalink:"/docs/scaling",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/docs/scaling.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi Cloud",permalink:"/docs/multi-cloud"},next:{title:"Introduction",permalink:"/docs/kollection/intro"}},l=[{value:"Monitoring",id:"monitoring",children:[]},{value:"Scaling",id:"scaling",children:[{value:"Manual Scaling",id:"manual-scaling",children:[]},{value:"Auto Scaling",id:"auto-scaling",children:[]}]}],s={toc:l};function u(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Monitoring resources is critical to maintain a stable system, and humans need to be aware of specific system status. In addition to monitoring, services on cloud native should be resilient and scalable. Clusters of kupboard are very flexible and its size can be changed manually or automatically."),(0,i.kt)("h2",{id:"monitoring"},"Monitoring"),(0,i.kt)("p",null,"Kupboard supports the resource monitoring using Prometheus and Grafana and they send notifications through a variety of ways such as Slack, Discord and email. In this way humans can recognize resource status and plan to handle specific situations."),(0,i.kt)("br",null),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{width:"720",src:"/img/scaling/monitoring-01.png",alt:"kupboard-monitoring-01"})),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"scaling"},"Scaling"),(0,i.kt)("p",null,"Cluster scaling is important for many reasons. If you can change the size of the cluster, it is very useful in many situations. You can prepare for some big events by increasing the size of the cluster or we can reduce the size of cluster when the resource utilization is less than we expected."),(0,i.kt)("h3",{id:"manual-scaling"},"Manual Scaling"),(0,i.kt)("p",null,"A user decides to increase or decrease the size of cluster based on the resouce status. You can easily do this by running kupboard's cluster command like below. Please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/cluster-management#cluster-command"},"here")," for more information about Cluster Command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kupboard cluster -a <create|delete> --node service-node3\n")),(0,i.kt)("br",null),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{width:"640",src:"/img/scaling/scaling-01.png",alt:"kupboard-scaling-01"})),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"auto-scaling"},"Auto Scaling"),(0,i.kt)("p",null,"Kupboard's auto-scaling module evaluates metric from resource monitoring and automatically performs scaling by adding a new node or removing an existing node."),(0,i.kt)("br",null),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{width:"640",src:"/img/scaling/scaling-02.png",alt:"kupboard-scaling-02"})),(0,i.kt)("br",null))}u.isMDXComponent=!0}}]);