(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[526],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),f=o,m=s["".concat(u,".").concat(f)]||s[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=s;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5175:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i={},l={unversionedId:"getstarted",id:"getstarted",isDocsHomePage:!1,title:"Get Started",description:"In this section, we'll take a brief look at how to run Kupboard and configuration.",source:"@site/docs/getstarted.md",sourceDirName:".",slug:"/getstarted",permalink:"/docs/getstarted",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/docs/getstarted.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Configurations",permalink:"/docs/configuration"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Data",id:"data",children:[]},{value:"Configuration",id:"configuration",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section, we'll take a brief look at how to run Kupboard and configuration. "),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"The Kupboard is available in docker container form and can be executed with the commands below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run kupboard.io/kupboard\n")),(0,a.kt)("p",null,"Below is the result of entering the '-h' or '--help' option."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ docker run kupboard.io/kupboard --help\n\nkupboard is a root command for managements of the Kupboard platform.\n\nUsage:\n  kupboard [flags]\n  kupboard [command]\n\nAvailable Commands:\n  build       Build application containers\n  collection  Deploy applications and install packages\n  deploy      Deploy services on target clusters\n  help        Help about any command\n  setup       Initialize target clusters\n  ssh         ssh connection to a target host\n\nFlags:\n      --config string      config file (default "kupboard.yaml")\n      --debug              enable debug\n  -e, --envvar string      ansible envvars\n  -h, --help               help for kupboard\n      --hide-log           diable logging\n      --hide-logo          hide kupboard logo\n\nUse "kupboard [command] --help" for more information about a command.\n')),(0,a.kt)("h2",{id:"data"},"Data"),(0,a.kt)("p",null,"To build a service environment using Kupboard, you need to mount the data folder when running the container. The structure of the data folder is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"data\n\u251c\u2500\u2500 api\n\u251c\u2500\u2500 certs\n\u251c\u2500\u2500 collections\n\u251c\u2500\u2500 log\n\u251c\u2500\u2500 manifests\n\u2514\u2500\u2500 kupboard.yaml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run -v $(pwd)/data:/kupboard/data kupboard.io/kupboard \n")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The default configuration file used by Kupboard is 'data/kupboard.yaml'. If the user does not specify the path of the configuration file, this default file will be applied. If you use a configuration file with a different name, or if you want to use one or more configuration files, you must specify the file with the '--config' option."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"data\n\u251c\u2500\u2500 kupboard.yaml\n\u2514\u2500\u2500 myconfig.yaml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run -v $(pwd)/data:/kupboard/data kupboard.io/kupboard --config data/myconfig.yaml\n")))}d.isMDXComponent=!0}}]);