(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4468],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,o(o({ref:n},s),{},{components:t})):r.createElement(f,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6942:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return s}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),o={},l={unversionedId:"cli",id:"cli",isDocsHomePage:!1,title:"CLI",description:"build",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/cli",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/docs/cli.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OpenAPI",permalink:"/docs/openapi"}},p=[{value:"build",id:"build",children:[]},{value:"collection",id:"collection",children:[{value:"app",id:"app",children:[]},{value:"package",id:"package",children:[]}]},{value:"deploy",id:"deploy",children:[]},{value:"setup",id:"setup",children:[]},{value:"ssh",id:"ssh",children:[]}],c={toc:p};function s(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"build"},"build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"build")," is a command used to build an OpenAPI based application."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Usage:\n  kupboard build [flags]\n\nFlags:\n      --app-port string   application port (default "8080")\n  -h, --help              help for build\n      --mock              mock\n  -p, --push              push application image (default true)\n  -r, --replica string    replication size (default "3")\n  -s, --service string    service name\n      --svc-port string   service port (default "8080")\n  -v, --version string    application version (default "1.0")\n')),(0,i.kt)("h2",{id:"collection"},"collection"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"collection")," is for management of packages and application included in collections. It has two sub commands, ",(0,i.kt)("inlineCode",{parentName:"p"},"app")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"package"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  kupboard collection [command]\n\nAvailable Commands:\n  app         Build and deploy collection applications\n  package     Install packages on remote clusters\n")),(0,i.kt)("h3",{id:"app"},"app"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"app")," is a sub command of ",(0,i.kt)("inlineCode",{parentName:"p"},"collection")," and used to build an application in a collection."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  kupboard collection app [flags]\n\nFlags:\n  -c, --collection string   target collection (default \"default\")\n  -h, --help                help for app\n  -n, --name string         application name ('all' for building all applications)\n")),(0,i.kt)("h3",{id:"package"},"package"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"package")," is a sub command of ",(0,i.kt)("inlineCode",{parentName:"p"},"collection")," and used to excute actions defined in a mugset."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Usage:\n  kupboard collection package [flags]\n\nFlags:\n  -a, --action string       action name (default "default")\n  -c, --collection string   target collection (default "default")\n  -h, --help                help for package\n  -n, --name string         package name\n')),(0,i.kt)("h2",{id:"deploy"},"deploy"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"deploy")," is for deployment of application containers on target clusters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  kupboard deploy  [flags]\n\nFlags:\n      --delete           delete applications\n  -h, --help             help for deploy\n      --mock             use mockup\n  -s, --service string   service name\n")),(0,i.kt)("h2",{id:"setup"},"setup"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"setup")," is to initialize clusters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  kupboard setup [flags]\n\nFlags:\n  -h, --help                   help for setup\n      --init-cluster           initialize targer cluster\n      --init-finish            finish initialization\n      --init-k8s               install kubernetes\n      --init-user              initialize user settings\n      --keygen                 create ssh keys\n      --root-password string   root password for init-user\n      --root-username string   root username for init-user\n")),(0,i.kt)("h2",{id:"ssh"},"ssh"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ssh")," is for ssh connection to a host."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  kupboard ssh <hostname> [flags]\n\nFlags:\n  -c, --command string   command string\n  -h, --help             help for ssh\n")))}s.isMDXComponent=!0}}]);