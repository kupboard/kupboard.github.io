(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6079],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,k=d["".concat(p,".").concat(m)]||d[m]||s[m]||r;return t?a.createElement(k,o(o({ref:n},u),{},{components:t})):a.createElement(k,o({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8722:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var a=t(2122),i=t(9756),r=(t(7294),t(3905)),o={},l={unversionedId:"collection/mugset",id:"collection/mugset",isDocsHomePage:!1,title:"Mugset",description:"mugset contains information about the applications and packages included in the collection.",source:"@site/docs/collection/mugset.md",sourceDirName:"collection",slug:"/collection/mugset",permalink:"/docs/collection/mugset",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/docs/collection/mugset.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/collection/intro"},next:{title:"Application",permalink:"/docs/collection/application"}},p=[{value:"Application",id:"application",children:[]},{value:"Packages",id:"packages",children:[]}],c={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mugset")," contains information about the applications and packages included in the collection. "),(0,r.kt)("h2",{id:"application"},"Application"),(0,r.kt)("p",null,"Applications included in the collection are often used when users want to deploy their applications to the service cluster. (For this reason, there are no applications in a default collection of kupboard.) Include the source directory containing ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," in the collection and define the build and deploy options in the ",(0,r.kt)("inlineCode",{parentName:"p"},"mugset"),". The kupboard builds the application based on the specifications defined in the mugset and deploys it to the service cluster."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apps:\n  - name: myapp\n    version: 1.0\n    app_port: 80\n    service_port: 8080\n    node_port: 32001\n    replica: 2\n    args:\n      - "--name=value"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," application name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"version")," application version (container tag)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"app_port")," container port on kubernetes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"service_port")," service port on kubernetes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"node_port")," service port(node port) on kubernetes. ",(0,r.kt)("inlineCode",{parentName:"li"},"node_port")," should set to expose a service using a port between 32000~32767."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replica")," pod replica"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args")," container build option")),(0,r.kt)("h2",{id:"packages"},"Packages"),(0,r.kt)("p",null,"If you have your own solution or open source package that you need for a service or operation, you can install it using kupboard. In addition you can define a variety of ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"parameter")," to handle many situations. Each package must contain at least one Ansible playbook, and can excuted in a variety of ways using the ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," defined in the mugset."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'packages:\n  - name: mypackage\n    vars:\n      target_group: gateway\n    playbook: nginx/nginx.yaml\n    actions:\n      - name: deploy\n        default: true\n        vars:\n          state: present\n        params:\n          - "name=value"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," pakcage name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vars")," playbook variables (for package)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"actions")," action list",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," action name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default")," default or not. If ",(0,r.kt)("inlineCode",{parentName:"li"},"action")," not given, the anction with ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," true will be excuted."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vars")," playbook variable (for action)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"params")," playbook parameter (used for ",(0,r.kt)("inlineCode",{parentName:"li"},"ansile-playbook"),")")))))}u.isMDXComponent=!0}}]);