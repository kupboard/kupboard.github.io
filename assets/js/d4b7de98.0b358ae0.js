(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2339],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||s[m]||i;return t?o.createElement(f,a(a({ref:n},u),{},{components:t})):o.createElement(f,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6250:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var o=t(2122),r=t(9756),i=(t(7294),t(3905)),a={},c={unversionedId:"collection/application",id:"collection/application",isDocsHomePage:!1,title:"Application",description:"Depending on how you compose Dockerfile, you can build container images for your application in a variety of ways. You can change only some files you need from the base image, or you can build a container image with just one Dockerfile. Also you can use environment variables to create images for different environments.",source:"@site/docs/collection/application.md",sourceDirName:"collection",slug:"/collection/application",permalink:"/docs/collection/application",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/docs/collection/application.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/docs/collection/config"},next:{title:"Package",permalink:"/docs/collection/package"}},l=[{value:"Build",id:"build",children:[]},{value:"Deployment",id:"deployment",children:[]}],p={toc:l};function u(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Depending on how you compose ",(0,i.kt)("inlineCode",{parentName:"p"},"Dockerfile"),", you can build container images for your application in a variety of ways. You can change only some files you need from the base image, or you can build a container image with just one ",(0,i.kt)("inlineCode",{parentName:"p"},"Dockerfile"),". Also you can use environment variables to create images for different environments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mycollection\n\u2514\u2500\u2500 apps\n \xa0\xa0 \u251c\u2500\u2500 app1\n \xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 Dockerfile\n \xa0\xa0 \u2514\u2500\u2500 app2\n        \u251c\u2500\u2500 src\n \xa0\xa0     \u2514\u2500\u2500 Dockerfile\n")),(0,i.kt)("h2",{id:"build"},"Build"),(0,i.kt)("p",null,"Applications defined in config can be built using the commands below, and the container image built in this way is automatically pushed to the Harbor registry defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"kupboard.yaml")," (or custom configuration file)."),(0,i.kt)("p",null,"Build customer application"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kupboard collection app -c <collection-name> -n <app-name>\n")),(0,i.kt)("p",null,"Build all customer applications"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kupboard collection app -c <collection-name>\n")),(0,i.kt)("p",null,"Build all customer applications from all customer collections"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kupboard collection app \n")),(0,i.kt)("h2",{id:"deployment"},"Deployment"),(0,i.kt)("p",null,"If a container image is pushed properly to the Harbor registry, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy")," command to deploy the container to the service cluster."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ kupboard deploy -s <application-name>\n")))}u.isMDXComponent=!0}}]);