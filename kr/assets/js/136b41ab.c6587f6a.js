(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2965],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),u=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(d.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),s=u(n),m=r,k=s["".concat(d,".").concat(m)]||s[m]||c[m]||l;return n?a.createElement(k,i(i({ref:e},p),{},{components:n})):a.createElement(k,i({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=s;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5319:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return d},default:function(){return p}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),i={},o={unversionedId:"getstarted/gcp",id:"getstarted/gcp",isDocsHomePage:!1,title:"Google Cloud Platform",description:"Introduction",source:"@site/i18n/kr/docusaurus-plugin-content-docs/current/getstarted/gcp.md",sourceDirName:"getstarted",slug:"/getstarted/gcp",permalink:"/kr/docs/getstarted/gcp",editUrl:"https://github.com/kupboard/kupboard-docs/edit/main/i18n/kr/docusaurus-plugin-content-docs/current/getstarted/gcp.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AWS Marketplace",permalink:"/kr/docs/getstarted/aws"},next:{title:"AZure",permalink:"/kr/docs/getstarted/azure"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"E2 Instance",id:"e2-instance",children:[]},{value:"VPC Network",id:"vpc-network",children:[]},{value:"Firewall",id:"firewall",children:[]},{value:"SSH Key",id:"ssh-key",children:[]},{value:"Data",id:"data",children:[]}],u={toc:d};function p(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"This section describes how to create and configure E2 instances to build a kupboard cluster on GCP(Google Cloud Platform)."),(0,l.kt)("h2",{id:"e2-instance"},"E2 Instance"),(0,l.kt)("p",null,"Kupboard clusters can be configured in a variety of ways depending on the service and application. In this example, we will create 1 server for the admin cluster, 1 server for the gateway cluster, and 4 servers for the service cluster."),(0,l.kt)("p",null,"You need to create 6 E2 instances as the table below. OS for all instances must be Ubuntu18.04 or 20.04. The size of additional disks should change depending services or pakcages installed on the service cluster."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Cluster"),(0,l.kt)("th",{parentName:"tr",align:null},"Instance Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Quantity"),(0,l.kt)("th",{parentName:"tr",align:null},"Boot Disk"),(0,l.kt)("th",{parentName:"tr",align:null},"Additional Disk"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Admin"),(0,l.kt)("td",{parentName:"tr",align:null},"e2-meidum <"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"50GB"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Gateway"),(0,l.kt)("td",{parentName:"tr",align:null},"e2-meidum <"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"50GB"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Service"),(0,l.kt)("td",{parentName:"tr",align:null},"e2-standard2 <"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"50GB"),(0,l.kt)("td",{parentName:"tr",align:null},"50GB <")))),(0,l.kt)("h2",{id:"vpc-network"},"VPC Network"),(0,l.kt)("p",null,"We need to create a VPC with a subnet ",(0,l.kt)("inlineCode",{parentName:"p"},"10.240.0.0/24"),"."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The subnet range must be ",(0,l.kt)("inlineCode",{parentName:"p"},"10.240.0.0/24"),". Otherwise kupboard will not work properly."))),(0,l.kt)("h2",{id:"firewall"},"Firewall"),(0,l.kt)("p",null,"Create a firewall for the subnet created above."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Cluster"),(0,l.kt)("th",{parentName:"tr",align:null},"Inbound"),(0,l.kt)("th",{parentName:"tr",align:null},"Source"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"All"),(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.0.0/0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"1 - 65535"),(0,l.kt)("td",{parentName:"tr",align:null},"10.240.0.0/24")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Admin"),(0,l.kt)("td",{parentName:"tr",align:null},"80,443"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.0.0/0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Gateway"),(0,l.kt)("td",{parentName:"tr",align:null},"80,443"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.0.0/0")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Cluster"),(0,l.kt)("th",{parentName:"tr",align:null},"Outbound"),(0,l.kt)("th",{parentName:"tr",align:null},"Destination"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"All"),(0,l.kt)("td",{parentName:"tr",align:null},"1 - 65535"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.0.0/0")))),(0,l.kt)("h2",{id:"ssh-key"},"SSH Key"),(0,l.kt)("p",null,"In order to initialize the servers, you must first register the SSH Key. A new key-pair can be generated with the command below, and the generated keys can be found in ",(0,l.kt)("inlineCode",{parentName:"p"},"data/certs"),". Go to ",(0,l.kt)("inlineCode",{parentName:"p"},"Compute Engine > Metadata > SSH Keys")," and add the public key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kupboard --keygen\n")),(0,l.kt)("h2",{id:"data"},"Data"),(0,l.kt)("p",null,"Move to ",(0,l.kt)("a",{parentName:"p",href:"/docs/getstarted/data"},"Data")))}p.isMDXComponent=!0}}]);